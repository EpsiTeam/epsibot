{
	"name": "epsibot",
	"version": "2.10.2",
	"description": "Light discord bot for epsilon needs",
	"main": "built/main.js",
	"scripts": {
		"/* STARTING THE BOT */": "------------------------------------------",
		"    // init": "Initialize Epsibot from the start",
		"init": "npm run db:migrate && npm run cmd:register && npm run start:builded",
		"    // start": "Build and start the bot, without checks",
		"start": "npm run build && npm run start:builded",
		"    // start:builded": "Start the bot from already built files",
		"start:builded": "node --enable-source-maps -r dotenv/config built/main.js",
		"    // dev": "Start the bot and checks the code",
		"dev": "npm run check && npm start",
		"/* CODE LIFECYCLE */": "--------------------------------------------",
		"    // build": "Delete built files and recreate them from the source code",
		"build": "rm -rf built/ && tsc",
		"    // check": "Check the source code with a formatter and a linter",
		"check": "prettier -c . && eslint src/",
		"    // fix": "Run the formatter and fix what the linter can fix",
		"fix": "prettier -w . && eslint --fix src",
		"/* EPSIBOT LIFECYCLE */": "-----------------------------------------",
		"    // cmd:check": "Check how many slash commands are registered globally and locally on this client",
		"cmd:check": "npm run build && node --enable-source-maps -r dotenv/config built/script/check-slash-commands.js",
		"    // cmd:register": "Register slash commands, globally if PRODUCTION is set to true, otherwise only on the DEV_GUILD_ID",
		"cmd:register": "npm run build && node --enable-source-maps -r dotenv/config built/script/register-slash-commands.js",
		"    // cmd:clear": "Clear slash commands, globally if PRODUCTION is set to true, otherwise only on the DEV_GUILD_ID",
		"cmd:clear": "npm run build && node --enable-source-maps -r dotenv/config built/script/clear-slash-commands.js",
		"/* DATABASE LIFECYCLE */": "----------------------------------------",
		"    // db": "Run typeorm with the correct configuration",
		"db": "typeorm -d built/database/DBConnection.js",
		"    // db:status": "Show if the DB is up to date",
		"db:status": "npm run build && npm run db schema:log",
		"    // db:migrations": "Show all migrations statuses",
		"db:migration": "npm run build && npm run db migration:show",
		"    // db:migrate": "Run all non-applied migration",
		"db:migrate": "npm run build && npm run db migration:run",
		"    // db:update": "Create a new migration file to be modified",
		"db:update": "npm run build && npm run db migration:generate -p true src/database/migration/todo && prettier -w .",
		"/* CI SCRIPTS /*": "------------------------------------------------",
		"    // ci:format-check": "Check if the code is correctly formatted",
		"ci:format-check": "prettier -c .",
		"    // ci:linter-check": "Check if the code is correclty linted",
		"ci:linter-check": "eslint src/",
		"    // ci:ts-check": "Check if typescript code is valid",
		"ci:ts-check": "tsc --noEmit"
	},
	"private": true,
	"author": "EpsiTeam",
	"license": "ISC",
	"type": "module",
	"dependencies": {
		"discord.js": "14.9.0",
		"better-sqlite3": "8.2.0",
		"typeorm": "0.3.15",
		"typescript": "5.0.4",
		"@types/node": "20.4.2",
		"chalk": "5.2.0",
		"date-fns": "2.29.3",
		"dotenv": "16.0.3",
		"reflect-metadata": "0.1.13"
	},
	"devDependencies": {
		"@typescript-eslint/eslint-plugin": "5.59.2",
		"@typescript-eslint/parser": "5.57.0",
		"eslint": "8.37.0",
		"eslint-config-prettier": "8.8.0",
		"eslint-plugin-import": "2.27.5",
		"prettier": "2.8.8",
		"ts-node": "10.9.1"
	},
	"engines": {
		"node": ">=16.16.0"
	},
	"prettier": {
		"tabWidth": 4,
		"useTabs": true,
		"trailingComma": "none"
	}
}
